version: '3.8'

# networks:
#   neo4j_network:
    # driver: bridge
# networks:
#   neo4j_network:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 10.5.0.0/16
#           gateway: 10.5.0.1


services:
  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.dev
    ports:
      - "8000:8000"  # Map port 80 in the container to port 8000 on the host
    depends_on:
      - neo4j  # Ensure the Neo4j container is started first
    # links:
    #   - neo4j
    # networks:
    #   - neo4j_network
    #     ipv4_address: 10.5.0.4

  neo4j:
    image: neo4j:latest
    # env_file:
    #   - .env.dev
    environment:
      NEO4J_AUTH: neo4j/password  # Set your desired username and password
      # NEO4J_dbms_connector_https_advertised__address: localhost:7473
      # NEO4J_dbms_connector_http_advertised__address: localhost:7474
      # NEO4J_dbms_connector_bolt_advertised__address: localhost:7687
      # NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_server_https_advertised__address: localhost:7473
      NEO4J_server_http_advertised__address: localhost:7474
      NEO4J_server_bolt_advertised__address: localhost:7687
      # NEO4J_server_bolt_listen__address: 0.0.0.0:7687
    # dbms.default_listen_address: 0.0.0.0

    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    # volumes:
    #   - ./.compose/neo4j/conf:/conf
    #   - ./.compose/neo4j/data:/data
    #   - ./.compose/neo4j/import:/import
    #   - ./.compose/neo4j/logs:/logs
    #   - ./.compose/neo4j/plugins:/plugins
    volumes:
      - ./data:/data  # Mount a volume for data persistence
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:7474"]
        interval: 10s
        timeout: 10s
        retries: 10

    # networks:
    #   - neo4j_network
    #     ipv4_address: 10.5.0.5
